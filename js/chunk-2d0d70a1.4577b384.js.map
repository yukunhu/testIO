{"version":3,"sources":["webpack:///./src/views/cameraCinematic.vue?c838","webpack:///./node_modules/three/examples/jsm/shaders/BokehShader2.js","webpack:///./node_modules/three/examples/jsm/cameras/CinematicCamera.js","webpack:///src/views/cameraCinematic.vue","webpack:///./src/views/cameraCinematic.vue?4d19","webpack:///./src/views/cameraCinematic.vue"],"names":["render","_vm","this","_h","$createElement","_c","_self","attrs","id","staticRenderFns","BokehShader","uniforms","textureWidth","value","textureHeight","focalDepth","focalLength","fstop","tColor","tDepth","maxblur","showFocus","manualdof","vignetting","depthblur","threshold","gain","bias","fringe","znear","zfar","noise","dithering","pentagon","shaderFocus","focusCoords","three_module","vertexShader","join","fragmentShader","BokehDepthShader","mNear","mFar","CinematicCamera","fov","aspect","near","far","call","type","postprocessing","enabled","shaderSettings","rings","samples","depthShader","materialDepth","setLens","initPostProcessing","prototype","Object","create","constructor","filmGauge","fNumber","coc","undefined","setFocalLength","aperture","hyperFocal","linearize","depth","smoothstep","x","saturate","Math","max","min","focusAt","focusDistance","getFocalLength","focus","nearPoint","farPoint","depthOfField","sdistance","ldistance","bokeh_uniforms","scene","camera","window","innerWidth","innerHeight","add","pars","minFilter","magFilter","format","rtTextureDepth","rtTextureColor","bokeh_shader","clone","texture","materialBokeh","defines","RINGS","SAMPLES","DEPTH_PACKING","quad","position","z","renderCinematic","renderer","currentRenderTarget","getRenderTarget","clear","overrideMaterial","setRenderTarget","cameraCinematicvue_type_script_lang_js_","name","mounted","set","background","light","normalize","geometry","i","object","color","random","y","raycaster","antialias","setPixelRatio","devicePixelRatio","setSize","document","getElementById","appendChild","domElement","effectController","matChanger","e","frameHeight","INTERSECTED","theta","radius","mouse","animate","requestAnimationFrame","sin","degToRad","cos","lookAt","updateMatrixWorld","setFromCamera","intersects","intersectObjects","children","length","targetDistance","distance","console","log","material","emissive","setHex","currentHex","getHex","onDocumentMouseMove","event","preventDefault","clientX","clientY","addEventListener","views_cameraCinematicvue_type_script_lang_js_","component","componentNormalizer","__webpack_exports__"],"mappings":"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","file":"js/chunk-2d0d70a1.4577b384.js","sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',{attrs:{\"id\":\"home\"}})}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","/**\n * @author zz85 / https://github.com/zz85 | twitter.com/blurspline\n *\n * Depth-of-field shader with bokeh\n * ported from GLSL shader by Martins Upitis\n * http://blenderartists.org/forum/showthread.php?237488-GLSL-depth-of-field-with-bokeh-v2-4-(update)\n *\n * Requires #define RINGS and SAMPLES integers\n */\n\nimport {\n\tVector2\n} from \"../../../build/three.module.js\";\n\n\n\nvar BokehShader = {\n\n\tuniforms: {\n\n\t\t\"textureWidth\": { value: 1.0 },\n\t\t\"textureHeight\": { value: 1.0 },\n\n\t\t\"focalDepth\": { value: 1.0 },\n\t\t\"focalLength\": { value: 24.0 },\n\t\t\"fstop\": { value: 0.9 },\n\n\t\t\"tColor\": { value: null },\n\t\t\"tDepth\": { value: null },\n\n\t\t\"maxblur\": { value: 1.0 },\n\n\t\t\"showFocus\": { value: 0 },\n\t\t\"manualdof\": { value: 0 },\n\t\t\"vignetting\": { value: 0 },\n\t\t\"depthblur\": { value: 0 },\n\n\t\t\"threshold\": { value: 0.5 },\n\t\t\"gain\": { value: 2.0 },\n\t\t\"bias\": { value: 0.5 },\n\t\t\"fringe\": { value: 0.7 },\n\n\t\t\"znear\": { value: 0.1 },\n\t\t\"zfar\": { value: 100 },\n\n\t\t\"noise\": { value: 1 },\n\t\t\"dithering\": { value: 0.0001 },\n\t\t\"pentagon\": { value: 0 },\n\n\t\t\"shaderFocus\": { value: 1 },\n\t\t\"focusCoords\": { value: new Vector2() }\n\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"void main() {\",\n\n\t\t\t\"vUv = uv;\",\n\t\t\t\"gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\n\t\t\"#include <common>\",\n\n\t\t\"varying vec2 vUv;\",\n\n\t\t\"uniform sampler2D tColor;\",\n\t\t\"uniform sampler2D tDepth;\",\n\t\t\"uniform float textureWidth;\",\n\t\t\"uniform float textureHeight;\",\n\n\t\t\"uniform float focalDepth;  //focal distance value in meters, but you may use autofocus option below\",\n\t\t\"uniform float focalLength; //focal length in mm\",\n\t\t\"uniform float fstop; //f-stop value\",\n\t\t\"uniform bool showFocus; //show debug focus point and focal range (red = focal point, green = focal range)\",\n\n\t\t\"/*\",\n\t\t\"make sure that these two values are the same for your camera, otherwise distances will be wrong.\",\n\t\t\"*/\",\n\n\t\t\"uniform float znear; // camera clipping start\",\n\t\t\"uniform float zfar; // camera clipping end\",\n\n\t\t\"//------------------------------------------\",\n\t\t\"//user variables\",\n\n\t\t\"const int samples = SAMPLES; //samples on the first ring\",\n\t\t\"const int rings = RINGS; //ring count\",\n\n\t\t\"const int maxringsamples = rings * samples;\",\n\n\t\t\"uniform bool manualdof; // manual dof calculation\",\n\t\t\"float ndofstart = 1.0; // near dof blur start\",\n\t\t\"float ndofdist = 2.0; // near dof blur falloff distance\",\n\t\t\"float fdofstart = 1.0; // far dof blur start\",\n\t\t\"float fdofdist = 3.0; // far dof blur falloff distance\",\n\n\t\t\"float CoC = 0.03; //circle of confusion size in mm (35mm film = 0.03mm)\",\n\n\t\t\"uniform bool vignetting; // use optical lens vignetting\",\n\n\t\t\"float vignout = 1.3; // vignetting outer border\",\n\t\t\"float vignin = 0.0; // vignetting inner border\",\n\t\t\"float vignfade = 22.0; // f-stops till vignete fades\",\n\n\t\t\"uniform bool shaderFocus;\",\n\t\t\"// disable if you use external focalDepth value\",\n\n\t\t\"uniform vec2 focusCoords;\",\n\t\t\"// autofocus point on screen (0.0,0.0 - left lower corner, 1.0,1.0 - upper right)\",\n\t\t\"// if center of screen use vec2(0.5, 0.5);\",\n\n\t\t\"uniform float maxblur;\",\n\t\t\"//clamp value of max blur (0.0 = no blur, 1.0 default)\",\n\n\t\t\"uniform float threshold; // highlight threshold;\",\n\t\t\"uniform float gain; // highlight gain;\",\n\n\t\t\"uniform float bias; // bokeh edge bias\",\n\t\t\"uniform float fringe; // bokeh chromatic aberration / fringing\",\n\n\t\t\"uniform bool noise; //use noise instead of pattern for sample dithering\",\n\n\t\t\"uniform float dithering;\",\n\n\t\t\"uniform bool depthblur; // blur the depth buffer\",\n\t\t\"float dbsize = 1.25; // depth blur size\",\n\n\t\t\"/*\",\n\t\t\"next part is experimental\",\n\t\t\"not looking good with small sample and ring count\",\n\t\t\"looks okay starting from samples = 4, rings = 4\",\n\t\t\"*/\",\n\n\t\t\"uniform bool pentagon; //use pentagon as bokeh shape?\",\n\t\t\"float feather = 0.4; //pentagon shape feather\",\n\n\t\t\"//------------------------------------------\",\n\n\t\t\"float penta(vec2 coords) {\",\n\t\t\t\"//pentagonal shape\",\n\t\t\t\"float scale = float(rings) - 1.3;\",\n\t\t\t\"vec4  HS0 = vec4( 1.0,         0.0,         0.0,  1.0);\",\n\t\t\t\"vec4  HS1 = vec4( 0.309016994, 0.951056516, 0.0,  1.0);\",\n\t\t\t\"vec4  HS2 = vec4(-0.809016994, 0.587785252, 0.0,  1.0);\",\n\t\t\t\"vec4  HS3 = vec4(-0.809016994,-0.587785252, 0.0,  1.0);\",\n\t\t\t\"vec4  HS4 = vec4( 0.309016994,-0.951056516, 0.0,  1.0);\",\n\t\t\t\"vec4  HS5 = vec4( 0.0        ,0.0         , 1.0,  1.0);\",\n\n\t\t\t\"vec4  one = vec4( 1.0 );\",\n\n\t\t\t\"vec4 P = vec4((coords),vec2(scale, scale));\",\n\n\t\t\t\"vec4 dist = vec4(0.0);\",\n\t\t\t\"float inorout = -4.0;\",\n\n\t\t\t\"dist.x = dot( P, HS0 );\",\n\t\t\t\"dist.y = dot( P, HS1 );\",\n\t\t\t\"dist.z = dot( P, HS2 );\",\n\t\t\t\"dist.w = dot( P, HS3 );\",\n\n\t\t\t\"dist = smoothstep( -feather, feather, dist );\",\n\n\t\t\t\"inorout += dot( dist, one );\",\n\n\t\t\t\"dist.x = dot( P, HS4 );\",\n\t\t\t\"dist.y = HS5.w - abs( P.z );\",\n\n\t\t\t\"dist = smoothstep( -feather, feather, dist );\",\n\t\t\t\"inorout += dist.x;\",\n\n\t\t\t\"return clamp( inorout, 0.0, 1.0 );\",\n\t\t\"}\",\n\n\t\t\"float bdepth(vec2 coords) {\",\n\t\t\t\"// Depth buffer blur\",\n\t\t\t\"float d = 0.0;\",\n\t\t\t\"float kernel[9];\",\n\t\t\t\"vec2 offset[9];\",\n\n\t\t\t\"vec2 wh = vec2(1.0/textureWidth,1.0/textureHeight) * dbsize;\",\n\n\t\t\t\"offset[0] = vec2(-wh.x,-wh.y);\",\n\t\t\t\"offset[1] = vec2( 0.0, -wh.y);\",\n\t\t\t\"offset[2] = vec2( wh.x -wh.y);\",\n\n\t\t\t\"offset[3] = vec2(-wh.x,  0.0);\",\n\t\t\t\"offset[4] = vec2( 0.0,   0.0);\",\n\t\t\t\"offset[5] = vec2( wh.x,  0.0);\",\n\n\t\t\t\"offset[6] = vec2(-wh.x, wh.y);\",\n\t\t\t\"offset[7] = vec2( 0.0,  wh.y);\",\n\t\t\t\"offset[8] = vec2( wh.x, wh.y);\",\n\n\t\t\t\"kernel[0] = 1.0/16.0;   kernel[1] = 2.0/16.0;   kernel[2] = 1.0/16.0;\",\n\t\t\t\"kernel[3] = 2.0/16.0;   kernel[4] = 4.0/16.0;   kernel[5] = 2.0/16.0;\",\n\t\t\t\"kernel[6] = 1.0/16.0;   kernel[7] = 2.0/16.0;   kernel[8] = 1.0/16.0;\",\n\n\n\t\t\t\"for( int i=0; i<9; i++ ) {\",\n\t\t\t\t\"float tmp = texture2D(tDepth, coords + offset[i]).r;\",\n\t\t\t\t\"d += tmp * kernel[i];\",\n\t\t\t\"}\",\n\n\t\t\t\"return d;\",\n\t\t\"}\",\n\n\n\t\t\"vec3 color(vec2 coords,float blur) {\",\n\t\t\t\"//processing the sample\",\n\n\t\t\t\"vec3 col = vec3(0.0);\",\n\t\t\t\"vec2 texel = vec2(1.0/textureWidth,1.0/textureHeight);\",\n\n\t\t\t\"col.r = texture2D(tColor,coords + vec2(0.0,1.0)*texel*fringe*blur).r;\",\n\t\t\t\"col.g = texture2D(tColor,coords + vec2(-0.866,-0.5)*texel*fringe*blur).g;\",\n\t\t\t\"col.b = texture2D(tColor,coords + vec2(0.866,-0.5)*texel*fringe*blur).b;\",\n\n\t\t\t\"vec3 lumcoeff = vec3(0.299,0.587,0.114);\",\n\t\t\t\"float lum = dot(col.rgb, lumcoeff);\",\n\t\t\t\"float thresh = max((lum-threshold)*gain, 0.0);\",\n\t\t\t\"return col+mix(vec3(0.0),col,thresh*blur);\",\n\t\t\"}\",\n\n\t\t\"vec3 debugFocus(vec3 col, float blur, float depth) {\",\n\t\t\t\"float edge = 0.002*depth; //distance based edge smoothing\",\n\t\t\t\"float m = clamp(smoothstep(0.0,edge,blur),0.0,1.0);\",\n\t\t\t\"float e = clamp(smoothstep(1.0-edge,1.0,blur),0.0,1.0);\",\n\n\t\t\t\"col = mix(col,vec3(1.0,0.5,0.0),(1.0-m)*0.6);\",\n\t\t\t\"col = mix(col,vec3(0.0,0.5,1.0),((1.0-e)-(1.0-m))*0.2);\",\n\n\t\t\t\"return col;\",\n\t\t\"}\",\n\n\t\t\"float linearize(float depth) {\",\n\t\t\t\"return -zfar * znear / (depth * (zfar - znear) - zfar);\",\n\t\t\"}\",\n\n\n\t\t\"float vignette() {\",\n\t\t\t\"float dist = distance(vUv.xy, vec2(0.5,0.5));\",\n\t\t\t\"dist = smoothstep(vignout+(fstop/vignfade), vignin+(fstop/vignfade), dist);\",\n\t\t\t\"return clamp(dist,0.0,1.0);\",\n\t\t\"}\",\n\n\t\t\"float gather(float i, float j, int ringsamples, inout vec3 col, float w, float h, float blur) {\",\n\t\t\t\"float rings2 = float(rings);\",\n\t\t\t\"float step = PI*2.0 / float(ringsamples);\",\n\t\t\t\"float pw = cos(j*step)*i;\",\n\t\t\t\"float ph = sin(j*step)*i;\",\n\t\t\t\"float p = 1.0;\",\n\t\t\t\"if (pentagon) {\",\n\t\t\t\t\"p = penta(vec2(pw,ph));\",\n\t\t\t\"}\",\n\t\t\t\"col += color(vUv.xy + vec2(pw*w,ph*h), blur) * mix(1.0, i/rings2, bias) * p;\",\n\t\t\t\"return 1.0 * mix(1.0, i /rings2, bias) * p;\",\n\t\t\"}\",\n\n\t\t\"void main() {\",\n\t\t\t\"//scene depth calculation\",\n\n\t\t\t\"float depth = linearize(texture2D(tDepth,vUv.xy).x);\",\n\n\t\t\t\"// Blur depth?\",\n\t\t\t\"if ( depthblur ) {\",\n\t\t\t\t\"depth = linearize(bdepth(vUv.xy));\",\n\t\t\t\"}\",\n\n\t\t\t\"//focal plane calculation\",\n\n\t\t\t\"float fDepth = focalDepth;\",\n\n\t\t\t\"if (shaderFocus) {\",\n\n\t\t\t\t\"fDepth = linearize(texture2D(tDepth,focusCoords).x);\",\n\n\t\t\t\"}\",\n\n\t\t\t\"// dof blur factor calculation\",\n\n\t\t\t\"float blur = 0.0;\",\n\n\t\t\t\"if (manualdof) {\",\n\t\t\t\t\"float a = depth-fDepth; // Focal plane\",\n\t\t\t\t\"float b = (a-fdofstart)/fdofdist; // Far DoF\",\n\t\t\t\t\"float c = (-a-ndofstart)/ndofdist; // Near Dof\",\n\t\t\t\t\"blur = (a>0.0) ? b : c;\",\n\t\t\t\"} else {\",\n\t\t\t\t\"float f = focalLength; // focal length in mm\",\n\t\t\t\t\"float d = fDepth*1000.0; // focal plane in mm\",\n\t\t\t\t\"float o = depth*1000.0; // depth in mm\",\n\n\t\t\t\t\"float a = (o*f)/(o-f);\",\n\t\t\t\t\"float b = (d*f)/(d-f);\",\n\t\t\t\t\"float c = (d-f)/(d*fstop*CoC);\",\n\n\t\t\t\t\"blur = abs(a-b)*c;\",\n\t\t\t\"}\",\n\n\t\t\t\"blur = clamp(blur,0.0,1.0);\",\n\n\t\t\t\"// calculation of pattern for dithering\",\n\n\t\t\t\"vec2 noise = vec2(rand(vUv.xy), rand( vUv.xy + vec2( 0.4, 0.6 ) ) )*dithering*blur;\",\n\n\t\t\t\"// getting blur x and y step factor\",\n\n\t\t\t\"float w = (1.0/textureWidth)*blur*maxblur+noise.x;\",\n\t\t\t\"float h = (1.0/textureHeight)*blur*maxblur+noise.y;\",\n\n\t\t\t\"// calculation of final color\",\n\n\t\t\t\"vec3 col = vec3(0.0);\",\n\n\t\t\t\"if(blur < 0.05) {\",\n\t\t\t\t\"//some optimization thingy\",\n\t\t\t\t\"col = texture2D(tColor, vUv.xy).rgb;\",\n\t\t\t\"} else {\",\n\t\t\t\t\"col = texture2D(tColor, vUv.xy).rgb;\",\n\t\t\t\t\"float s = 1.0;\",\n\t\t\t\t\"int ringsamples;\",\n\n\t\t\t\t\"for (int i = 1; i <= rings; i++) {\",\n\t\t\t\t\t\"/*unboxstart*/\",\n\t\t\t\t\t\"ringsamples = i * samples;\",\n\n\t\t\t\t\t\"for (int j = 0 ; j < maxringsamples ; j++) {\",\n\t\t\t\t\t\t\"if (j >= ringsamples) break;\",\n\t\t\t\t\t\t\"s += gather(float(i), float(j), ringsamples, col, w, h, blur);\",\n\t\t\t\t\t\"}\",\n\t\t\t\t\t\"/*unboxend*/\",\n\t\t\t\t\"}\",\n\n\t\t\t\t\"col /= s; //divide by sample count\",\n\t\t\t\"}\",\n\n\t\t\t\"if (showFocus) {\",\n\t\t\t\t\"col = debugFocus(col, blur, depth);\",\n\t\t\t\"}\",\n\n\t\t\t\"if (vignetting) {\",\n\t\t\t\t\"col *= vignette();\",\n\t\t\t\"}\",\n\n\t\t\t\"gl_FragColor.rgb = col;\",\n\t\t\t\"gl_FragColor.a = 1.0;\",\n\t\t\"} \"\n\n\t].join( \"\\n\" )\n\n};\n\nvar BokehDepthShader = {\n\n\tuniforms: {\n\n\t\t\"mNear\": { value: 1.0 },\n\t\t\"mFar\": { value: 1000.0 },\n\n\t},\n\n\tvertexShader: [\n\n\t\t\"varying float vViewZDepth;\",\n\n\t\t\"void main() {\",\n\n\t\t\"\t#include <begin_vertex>\",\n\t\t\"\t#include <project_vertex>\",\n\n\t\t\"\tvViewZDepth = - mvPosition.z;\",\n\n\t\t\"}\"\n\n\t].join( \"\\n\" ),\n\n\tfragmentShader: [\n\n\t\t\"uniform float mNear;\",\n\t\t\"uniform float mFar;\",\n\n\t\t\"varying float vViewZDepth;\",\n\n\t\t\"void main() {\",\n\n\t\t\"\tfloat color = 1.0 - smoothstep( mNear, mFar, vViewZDepth );\",\n\t\t\"\tgl_FragColor = vec4( vec3( color ), 1.0 );\",\n\n\t\t\"} \"\n\n\t].join( \"\\n\" )\n\n};\n\nexport { BokehShader, BokehDepthShader };\n","/**\n * @author mrdoob / http://mrdoob.com/\n * @author greggman / http://games.greggman.com/\n * @author zz85 / http://www.lab4games.net/zz85/blog\n * @author kaypiKun\n */\n\nimport {\n\tLinearFilter,\n\tMesh,\n\tOrthographicCamera,\n\tPerspectiveCamera,\n\tPlaneBufferGeometry,\n\tRGBFormat,\n\tScene,\n\tShaderMaterial,\n\tUniformsUtils,\n\tWebGLRenderTarget\n} from \"../../../build/three.module.js\";\nimport { BokehShader } from \"../shaders/BokehShader2.js\";\nimport { BokehDepthShader } from \"../shaders/BokehShader2.js\";\n\nvar CinematicCamera = function ( fov, aspect, near, far ) {\n\n\tPerspectiveCamera.call( this, fov, aspect, near, far );\n\n\tthis.type = 'CinematicCamera';\n\n\tthis.postprocessing = { enabled: true };\n\tthis.shaderSettings = {\n\t\trings: 3,\n\t\tsamples: 4\n\t};\n\n\tvar depthShader = BokehDepthShader;\n\n\tthis.materialDepth = new ShaderMaterial( {\n\t\tuniforms: depthShader.uniforms,\n\t\tvertexShader: depthShader.vertexShader,\n\t\tfragmentShader: depthShader.fragmentShader\n\t} );\n\n\tthis.materialDepth.uniforms[ 'mNear' ].value = near;\n\tthis.materialDepth.uniforms[ 'mFar' ].value = far;\n\n\t// In case of cinematicCamera, having a default lens set is important\n\tthis.setLens();\n\n\tthis.initPostProcessing();\n\n};\n\nCinematicCamera.prototype = Object.create( PerspectiveCamera.prototype );\nCinematicCamera.prototype.constructor = CinematicCamera;\n\n\n// providing fnumber and coc(Circle of Confusion) as extra arguments\nCinematicCamera.prototype.setLens = function ( focalLength, filmGauge, fNumber, coc ) {\n\n\t// In case of cinematicCamera, having a default lens set is important\n\tif ( focalLength === undefined ) focalLength = 35;\n\tif ( filmGauge !== undefined ) this.filmGauge = filmGauge;\n\n\tthis.setFocalLength( focalLength );\n\n\t// if fnumber and coc are not provided, cinematicCamera tries to act as a basic PerspectiveCamera\n\tif ( fNumber === undefined ) fNumber = 8;\n\tif ( coc === undefined ) coc = 0.019;\n\n\tthis.fNumber = fNumber;\n\tthis.coc = coc;\n\n\t// fNumber is focalLength by aperture\n\tthis.aperture = focalLength / this.fNumber;\n\n\t// hyperFocal is required to calculate depthOfField when a lens tries to focus at a distance with given fNumber and focalLength\n\tthis.hyperFocal = ( focalLength * focalLength ) / ( this.aperture * this.coc );\n\n};\n\nCinematicCamera.prototype.linearize = function ( depth ) {\n\n\tvar zfar = this.far;\n\tvar znear = this.near;\n\treturn - zfar * znear / ( depth * ( zfar - znear ) - zfar );\n\n};\n\nCinematicCamera.prototype.smoothstep = function ( near, far, depth ) {\n\n\tvar x = this.saturate( ( depth - near ) / ( far - near ) );\n\treturn x * x * ( 3 - 2 * x );\n\n};\n\nCinematicCamera.prototype.saturate = function ( x ) {\n\n\treturn Math.max( 0, Math.min( 1, x ) );\n\n};\n\n// function for focusing at a distance from the camera\nCinematicCamera.prototype.focusAt = function ( focusDistance ) {\n\n\tif ( focusDistance === undefined ) focusDistance = 20;\n\n\tvar focalLength = this.getFocalLength();\n\n\t// distance from the camera (normal to frustrum) to focus on\n\tthis.focus = focusDistance;\n\n\t// the nearest point from the camera which is in focus (unused)\n\tthis.nearPoint = ( this.hyperFocal * this.focus ) / ( this.hyperFocal + ( this.focus - focalLength ) );\n\n\t// the farthest point from the camera which is in focus (unused)\n\tthis.farPoint = ( this.hyperFocal * this.focus ) / ( this.hyperFocal - ( this.focus - focalLength ) );\n\n\t// the gap or width of the space in which is everything is in focus (unused)\n\tthis.depthOfField = this.farPoint - this.nearPoint;\n\n\t// Considering minimum distance of focus for a standard lens (unused)\n\tif ( this.depthOfField < 0 ) this.depthOfField = 0;\n\n\tthis.sdistance = this.smoothstep( this.near, this.far, this.focus );\n\n\tthis.ldistance = this.linearize( 1 -\tthis.sdistance );\n\n\tthis.postprocessing.bokeh_uniforms[ 'focalDepth' ].value = this.ldistance;\n\n};\n\nCinematicCamera.prototype.initPostProcessing = function () {\n\n\tif ( this.postprocessing.enabled ) {\n\n\t\tthis.postprocessing.scene = new Scene();\n\n\t\tthis.postprocessing.camera = new OrthographicCamera( window.innerWidth / - 2, window.innerWidth / 2,\twindow.innerHeight / 2, window.innerHeight / - 2, - 10000, 10000 );\n\n\t\tthis.postprocessing.scene.add( this.postprocessing.camera );\n\n\t\tvar pars = { minFilter: LinearFilter, magFilter: LinearFilter, format: RGBFormat };\n\t\tthis.postprocessing.rtTextureDepth = new WebGLRenderTarget( window.innerWidth, window.innerHeight, pars );\n\t\tthis.postprocessing.rtTextureColor = new WebGLRenderTarget( window.innerWidth, window.innerHeight, pars );\n\n\t\tvar bokeh_shader = BokehShader;\n\n\t\tthis.postprocessing.bokeh_uniforms = UniformsUtils.clone( bokeh_shader.uniforms );\n\n\t\tthis.postprocessing.bokeh_uniforms[ \"tColor\" ].value = this.postprocessing.rtTextureColor.texture;\n\t\tthis.postprocessing.bokeh_uniforms[ \"tDepth\" ].value = this.postprocessing.rtTextureDepth.texture;\n\n\t\tthis.postprocessing.bokeh_uniforms[ \"manualdof\" ].value = 0;\n\t\tthis.postprocessing.bokeh_uniforms[ \"shaderFocus\" ].value = 0;\n\n\t\tthis.postprocessing.bokeh_uniforms[ \"fstop\" ].value = 2.8;\n\n\t\tthis.postprocessing.bokeh_uniforms[ \"showFocus\" ].value = 1;\n\n\t\tthis.postprocessing.bokeh_uniforms[ \"focalDepth\" ].value = 0.1;\n\n\t\t//console.log( this.postprocessing.bokeh_uniforms[ \"focalDepth\" ].value );\n\n\t\tthis.postprocessing.bokeh_uniforms[ \"znear\" ].value = this.near;\n\t\tthis.postprocessing.bokeh_uniforms[ \"zfar\" ].value = this.near;\n\n\n\t\tthis.postprocessing.bokeh_uniforms[ \"textureWidth\" ].value = window.innerWidth;\n\n\t\tthis.postprocessing.bokeh_uniforms[ \"textureHeight\" ].value = window.innerHeight;\n\n\t\tthis.postprocessing.materialBokeh = new ShaderMaterial( {\n\t\t\tuniforms: this.postprocessing.bokeh_uniforms,\n\t\t\tvertexShader: bokeh_shader.vertexShader,\n\t\t\tfragmentShader: bokeh_shader.fragmentShader,\n\t\t\tdefines: {\n\t\t\t\tRINGS: this.shaderSettings.rings,\n\t\t\t\tSAMPLES: this.shaderSettings.samples,\n\t\t\t\tDEPTH_PACKING: 1\n\t\t\t}\n\t\t} );\n\n\t\tthis.postprocessing.quad = new Mesh( new PlaneBufferGeometry( window.innerWidth, window.innerHeight ), this.postprocessing.materialBokeh );\n\t\tthis.postprocessing.quad.position.z = - 500;\n\t\tthis.postprocessing.scene.add( this.postprocessing.quad );\n\n\t}\n\n};\n\nCinematicCamera.prototype.renderCinematic = function ( scene, renderer ) {\n\n\tif ( this.postprocessing.enabled ) {\n\n\t\tvar currentRenderTarget = renderer.getRenderTarget();\n\n\t\trenderer.clear();\n\n\t\t// Render scene into texture\n\n\t\tscene.overrideMaterial = null;\n\t\trenderer.setRenderTarget( this.postprocessing.rtTextureColor );\n\t\trenderer.clear();\n\t\trenderer.render( scene, this );\n\n\t\t// Render depth into texture\n\n\t\tscene.overrideMaterial = this.materialDepth;\n\t\trenderer.setRenderTarget( this.postprocessing.rtTextureDepth );\n\t\trenderer.clear();\n\t\trenderer.render( scene, this );\n\n\t\t// Render bokeh composite\n\n\t\trenderer.setRenderTarget( null );\n\t\trenderer.render( this.postprocessing.scene, this.postprocessing.camera );\n\n\t\trenderer.setRenderTarget( currentRenderTarget );\n\n\t}\n\n};\n\nexport { CinematicCamera };\n","<template>\n  <div id=\"home\">\n  </div>\n</template>\n\n<script>\nimport { Scene, Color, AmbientLight, DirectionalLight, BoxBufferGeometry, Mesh, MeshLambertMaterial, Raycaster, WebGLRenderer, Math as tMath, Vector2 } from 'three'\nimport { CinematicCamera } from 'three/examples/jsm/cameras/CinematicCamera'\nexport default {\n  name: 'camera-cinematic',\n  mounted () {\n    let camera = new CinematicCamera(60, window.innerWidth / window.innerHeight, 1, 1000)\n    camera.setLens(5)\n    camera.position.set(2, 1, 500)\n\n    let scene = new Scene()\n    scene.background = new Color(0xf0f0f0)\n    scene.add(new AmbientLight(0xffffff, 0.3))\n\n    let light = new DirectionalLight(0xffffff, 0.35)\n    light.position.set(1, 1, 1).normalize()\n    scene.add(light)\n\n    let geometry = new BoxBufferGeometry(20, 20, 20)\n    for (let i = 0; i < 1500; i++) {\n      let object = new Mesh(geometry, new MeshLambertMaterial({ color: Math.random() * 0xffffff }))\n      object.position.x = Math.random() * 800 - 400\n      object.position.y = Math.random() * 800 - 400\n      object.position.z = Math.random() * 800 - 400\n      scene.add(object)\n    }\n\n    let raycaster = new Raycaster()\n    let renderer = new WebGLRenderer({ antialias: true })\n    renderer.setPixelRatio(window.devicePixelRatio)\n    renderer.setSize(window.innerWidth, window.innerHeight)\n    document.getElementById('home').appendChild(renderer.domElement)\n    var effectController = {\n\n      focalLength: 15,\n      // jsDepthCalculation: true,\n      // shaderFocus: false,\n      //\n      fstop: 2.8,\n      // maxblur: 1.0,\n      //\n      showFocus: false,\n      focalDepth: 3\n      // manualdof: false,\n      // vignetting: false,\n      // depthblur: false,\n      //\n      // threshold: 0.5,\n      // gain: 2.0,\n      // bias: 0.5,\n      // fringe: 0.7,\n      //\n      // focalLength: 35,\n      // noise: true,\n      // pentagon: false,\n      //\n      // dithering: 0.0001\n\n    }\n    var matChanger = function () {\n      for (var e in effectController) {\n        if (e in camera.postprocessing.bokeh_uniforms) {\n          camera.postprocessing.bokeh_uniforms[ e ].value = effectController[ e ]\n        }\n      }\n\n      camera.postprocessing.bokeh_uniforms[ 'znear' ].value = camera.near\n      camera.postprocessing.bokeh_uniforms[ 'zfar' ].value = camera.far\n      camera.setLens(effectController.focalLength, camera.frameHeight, effectController.fstop, camera.coc)\n      effectController[ 'focalDepth' ] = camera.postprocessing.bokeh_uniforms[ 'focalDepth' ].value\n    }\n    matChanger()\n    let theta = 0\n    let radius = 100\n    let mouse = new Vector2()\n    let INTERSECTED\n    document.addEventListener('mousemove', onDocumentMouseMove, false)\n    animate()\n    function animate () {\n      requestAnimationFrame(animate, renderer.domElement)\n      theta += 0.1\n      camera.position.x = radius * Math.sin(tMath.degToRad(theta))\n      camera.position.y = radius * Math.sin(tMath.degToRad(theta))\n      camera.position.z = radius * Math.cos(tMath.degToRad(theta))\n      camera.lookAt(scene.position)\n      camera.updateMatrixWorld()\n      raycaster.setFromCamera(mouse, camera)\n      let intersects = raycaster.intersectObjects(scene.children)\n      if (intersects.length > 0) {\n        let targetDistance = intersects[0].distance\n        console.log(targetDistance)\n        camera.focusAt(targetDistance)\n        if (INTERSECTED !== intersects[0].object) {\n          if (INTERSECTED) {\n            INTERSECTED.material.emissive.setHex(INTERSECTED.currentHex)\n          }\n          INTERSECTED = intersects[0].object\n          INTERSECTED.currentHex = INTERSECTED.material.emissive.getHex()\n          INTERSECTED.material.emissive.setHex(0xff00000)\n        }\n      } else {\n        if (INTERSECTED) {\n          INTERSECTED.material.emissive.setHex(INTERSECTED.currentHex)\n        }\n        INTERSECTED = null\n      }\n\n      if (camera.postprocessing.enabled) {\n        camera.renderCinematic(scene, renderer)\n      } else {\n        scene.overrideMaterial = null\n        renderer.clear()\n        renderer.render(scene, camera)\n      }\n    }\n    function onDocumentMouseMove (event) {\n      event.preventDefault()\n\n      mouse.x = (event.clientX / window.innerWidth) * 2 - 1\n      mouse.y = -(event.clientY / window.innerHeight) * 2 + 1\n    }\n  }\n}\n</script>\n","import mod from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./cameraCinematic.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../node_modules/thread-loader/dist/cjs.js!../../node_modules/babel-loader/lib/index.js!../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../node_modules/vue-loader/lib/index.js??vue-loader-options!./cameraCinematic.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./cameraCinematic.vue?vue&type=template&id=5a0f308e&\"\nimport script from \"./cameraCinematic.vue?vue&type=script&lang=js&\"\nexport * from \"./cameraCinematic.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"sourceRoot":""}